{"version":3,"sources":["components/header.js","components/facebook.js","components/login.js","components/hero.js","App.js","serviceWorker.js","index.js"],"names":["Header","class","href","xmlns","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","viewBox","d","id","Facebook","state","isLoggedIn","userId","name","email","picture","responseFacebook","response","setState","userID","data","url","componentClicked","console","log","fbContent","this","style","width","margin","background","padding","src","alt","appId","autoLoad","fields","cssClass","icon","onClick","callback","Component","Login","setLogin","data-content","type","placeholder","required","axios","method","document","getElementById","value","password","then","alert","error","Hero","App","useState","login","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a80a2ab5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nconst Header = () => {\n  return (\n    <header class=\"text-gray-700 body-font\">\n      <div class=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n        <nav class=\"flex lg:w-2/5 flex-wrap items-center text-base md:ml-auto\"></nav>\n        <a\n          href=\"google.com\"\n          class=\"flex order-first lg:order-none lg:w-1/5 title-font font-medium items-center text-gray-900 lg:items-center lg:justify-center mb-4 md:mb-0\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            class=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\"></path>\n          </svg>\n          <span class=\"ml-3 text-xl\">Sameer's Designs</span>\n        </a>\n        <div class=\"lg:w-2/5 inline-flex lg:justify-end ml-5 lg:ml-0\"></div>\n      </div>\n      <div id=\"divider\">\n        <hr />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\n\nexport default class Facebook extends Component {\n  state = {\n    isLoggedIn: false,\n    userId: \"\",\n    name: \"\",\n    email: \"\",\n    picture: \"\",\n  };\n\n  responseFacebook = (response) => {\n    this.setState({\n      isLoggedIn: true,\n      userID: response.userID,\n      name: response.name,\n      email: response.email,\n      picture: response.picture.data.url,\n    });\n  };\n\n  componentClicked = () => console.log(\"clicked\");\n\n  render() {\n    let fbContent;\n    if (this.state.isLoggedIn) {\n      fbContent = (\n        <div\n          style={{\n            width: \"400px\",\n            margin: \"auto\",\n            background: \"#f4f4f4\",\n            padding: \"20px\",\n          }}\n        >\n          <img src={this.state.picture} alt={this.state.name} />\n          <h2>Welcome {this.state.name}</h2>\n          Email: {this.state.email}\n        </div>\n      );\n    } else {\n      fbContent = (\n        <FacebookLogin\n          appId=\"1668642716635635\"\n          autoLoad={false}\n          fields=\"name,email,picture\"\n          cssClass=\"inline-flex items-center text-1x1 text-center py-3 rounded bg-white-300 text-black font-bold py-2 px-4 rounded border\"\n          icon=\"fa fa-facebook\"\n          onClick={this.componentClicked}\n          callback={this.responseFacebook}\n        />\n      );\n    }\n\n    return <div>{fbContent}</div>;\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./login.css\";\n\n// Importing componenets\nimport FacebookLogin from \"./facebook\";\n\nconst Login = ({ setLogin }) => {\n  const submission = () => {\n    axios({\n      method: \"post\",\n      url: \"https://reqres.in/api/users\",\n      data: {\n        email: document.getElementById(\"email\").value,\n        password: document.getElementById(\"pass\").value,\n      },\n    }).then(\n      (response) => {\n        console.log(response);\n        alert(`${response.data.email} has been registered`);\n        setLogin(true);\n      },\n      (error) => {\n        alert(error);\n      }\n    );\n  };\n\n  return (\n    <div class=\"bg-grey-lighter min-h-screen flex flex-col\">\n      <div class=\"container max-w-lg mx-auto flex-1 flex flex-col items-center justify-center px-2\">\n        <div class=\"bg-white px-6 py-8 rounded shadow-md text-black w-full\">\n          <h1 class=\"mb-8 text-3xl text-center\">Sign up</h1>\n          <h2 class=\"mb-8 text-2xl text-center\">Create your Account</h2>\n          <h3 class=\"mb-8 text-1x1 text-center\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\n          </h3>\n          <div class=\"text-center\">\n            <FacebookLogin setLogin={setLogin} />\n          </div>\n          <hr class=\"hr-text\" data-content=\"OR\" />\n          <input\n            type=\"text\"\n            class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n            name=\"fullname\"\n            placeholder=\"Full Name\"\n            required\n          />\n          <input\n            type=\"text\"\n            class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n            name=\"email\"\n            placeholder=\"Email\"\n            id=\"email\"\n            required\n          />\n          <input\n            type=\"password\"\n            class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n            name=\"password\"\n            id=\"pass\"\n            placeholder=\"Password\"\n            required\n          />\n          <input\n            type=\"password\"\n            class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n            name=\"confirm_password\"\n            placeholder=\"Confirm Password\"\n            required\n          />\n\n          <div class=\"text-center text-sm text-grey-dark mt-4\">\n            By signing up, you agree to the{\" \"}\n            <a\n              class=\"no-underline border-b border-grey-dark text-grey-dark\"\n              href=\"google.com\"\n            >\n              Terms of Service\n            </a>{\" \"}\n            and{\" \"}\n            <a\n              class=\"no-underline border-b border-grey-dark text-grey-dark\"\n              href=\"google.com\"\n            >\n              Privacy Policy\n            </a>{\" \"}\n          </div>\n\n          <button\n            id=\"submit\"\n            type=\"submit\"\n            onClick={submission}\n            class=\" w-full py-3 rounded bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Create Account\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Hero = () => {\n  return (\n    <section class=\"text-gray-700 body-font\">\n      <div class=\"container mx-auto flex px-5 py-24 md:flex-row flex-col items-center\">\n        <div class=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\">\n          <h1 class=\"title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900\">\n            You've Logged in\n            <br class=\"hidden lg:inline-block\" />\n            readymade gluten\n          </h1>\n          <p class=\"mb-8 leading-relaxed\">\n            Copper mug try-hard pitchfork pour-over freegan heirloom neutra air\n            plant cold-pressed tacos poke beard tote bag. Heirloom echo park\n            mlkshk tote bag selvage hot chicken authentic tumeric truffaut\n            hexagon try-hard chambray.\n          </p>\n          <div class=\"flex justify-center\">\n            <button class=\"inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg\">\n              Button\n            </button>\n            <button class=\"ml-4 inline-flex text-gray-700 bg-gray-200 border-0 py-2 px-6 focus:outline-none hover:bg-gray-300 rounded text-lg\">\n              Button\n            </button>\n          </div>\n        </div>\n        <div class=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\">\n          <img\n            class=\"object-cover object-center rounded\"\n            alt=\"hero\"\n            src=\"https://dummyimage.com/720x600\"\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// Importing components\nimport Header from \"./components/header\";\nimport Login from \"./components/login\";\nimport Hero from \"./components/hero\";\n\nfunction App() {\n  let [login, setLogin] = useState(false);\n  if (login) {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Hero />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Login setLogin={setLogin} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}